import { expect, test } from "vitest";
import { dividePrecision } from ".";

const dataDivide = [
  [1.21, 1.1, 1.1],
  [4750.49269435, 4, 1187.6231735875],
  [0.9, 3, 0.3],
  [36.2, 0.362, 100],
  // biome-ignore lint/correctness/noPrecisionLoss: Ignore test
  [-20, 5.2, -3.8461538461538462],
  [-2, 1.22, -1.639344262295082],
  [-2.3, 2.5, -0.92],
  [-1.4, -2.2, 0.6363636363636364],
  [7, -3, -2.3333333333333335],
  [7, -0.076, -92.10526315789471],
  [-2.9, 8.0, -0.3625],
  [2, 6.6, 0.30303030303030304],
  [-8, 10.0, -0.8],
  [8, -1.1, -7.272727272727273],
  ["1.21", "1.1", 1.1],
  ["4750.49269435", "4", 1187.6231735875],
  ["0.9", "3", 0.3],
  ["36.2", "0.362", 100],
  // biome-ignore lint/correctness/noPrecisionLoss: Ignore test
  ["-20", "5.2", -3.8461538461538462],
  ["-2", "1.22", -1.639344262295082],
  ["-2.3", "2.5", -0.92],
  ["-1.4", "-2.2", 0.6363636363636364],
  ["7", "-3", -2.3333333333333335],
  ["7", "-0.076", -92.10526315789471],
  ["-2.9", "8.0", -0.3625],
  ["2", "6.6", 0.30303030303030304],
  ["-8", "10.0", -0.8],
  ["8", "-1.1", -7.272727272727273],
  [-1.23e4, 20, -615],
  [2.55e-10, 1.7e-30, 1.5e20],
  ["-1.23e4", "20", -615],
  ["2.55e-10", "1.7e-30", 1.5e20],
  [33.3333, 100, 0.333333],
  [83.42894732749, 100, 0.8342894732749],
  [1, 3, 0.3333333333333333],
  ["33.3333", "100", 0.333333],
  ["83.42894732749", "100", 0.8342894732749],
  ["1", "3", 0.3333333333333333],
];

test.concurrent.each(dataDivide)("Divide operation: %s / %s = %d", (a, b, output) => {
  expect(dividePrecision(a, b)).toBe(output);
});
expect(dividePrecision("12", "3", "2")).toBe(2);
expect(dividePrecision(12, 3, 2)).toBe(2);
expect(dividePrecision(1024, 4, 8, 2) === 16);
expect(dividePrecision(...new Array(500).fill(1)) === 1);
